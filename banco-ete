programa {
inclua biblioteca Util --> u
	funcao inicio() {
	// DECLARAÇÃO DE VARIAVEIS
		cadeia 
			nome_titular,
			resposta = ""
		inteiro 
			opcao,
			agencia_conta = 0,
			numero_conta = 0,
			digito_conta = 0
			
		logico 
			menu = verdadeiro

		real 
			valor,
			saldo_corrente = 0.0,
			saldo_poupanca = 0.0

			escreva("BANCO ETE BEM VINDO\n")
		// CRIAANDO A  CONTA DO USUARIO
		escreva("Digite seu nome: ")
		leia(nome_titular) // GUARDA O DADOS DA VARIAVEL NOME
		escreva("Digite o numero de Agencia: ")
		leia(agencia_conta) // GUARDA O DADO DA VARIAVEL AGENCIA
		escreva("Digite o numero de conta: ")
		leia(numero_conta) // GUARDA O DADO DA VARIAVEL COONTA
		escreva("Digite o numero de digitido: ")
		leia(digito_conta) // GUARDA O DADO DA VARIAVEL DIGITO
		// MENU DO DEPOSITO INCIAL
		escreva("Deseja Realiza o seu primeiro deposito na conta?\n \t 1 - S / 2 -  N\n")
		escreva("\n opção: ")
		leia(opcao) // GUARDA O DADO DA VARIAVEL OPCAO PARA EXECUCAO DA CONDICAO ESCOLHA
		escolha(opcao) { // ESTRUTURA ESCOLHA
			caso 1: //OPCAO 1 REALIZA O DEPOSITO NA CONTA CORRENTE
				escreva("Informe o valor do deposito: ")
				leia(valor) // GUARADA O VALOR INDICADO NO DEPOSITO NA CONTA CORRENTE
				saldo_corrente = saldo_corrente + valor // ACUMULA OS VALORES DOS DEPOSITOS EFETUADOS
				limpa() // LIMPA A TELA PARA A PROXIMA EXECUCAO DO PROGRAMA
				escreva("Deposito realizado com sucesso !\n")
				u.aguarde(2500) // METODO DA BLIBIOTECA AGUARDE 
				limpa()
				escreva("CONTA CRIADA COM SUCESSO! \n")
				u.aguarde(2500)
				limpa()
				pare
			caso 2:
				escreva("Conta CRIADA COM SUCESSO! \n") // CONTA CRIADA
				u.aguarde(2500)
				limpa()
		}

		faca { // MENU PARA OPERAÇÕES DE ACORDO COM OS REQUESITOS SOLICITADOS 
			escreva("\tBanco ETE\n")
	      	escreva("1 - Operações na Conta Corrente\n")
	      	escreva("2 - Operações na Conta Poupança\n")
	      	escreva("0 - Sair\n")
			leia(opcao) // GUARDA O VALOR DO MENU PARA A CONDIÇÃO ESCOLHA
			limpa()
			escolha(opcao) { 
				caso 1: // MENU DAS OPERÇÕES DA CONTA CORRENTE 
					escreva("Escolha uma opção:\n")
					escreva("1 - Saque\n")
					escreva("2 - Depósito\n")
					escreva("3 - Exibir saldo\n")
					escreva("\n\n0 - Voltar para o menu principal\n")
			         	leia(opcao) // GUARDA A OPÇÃO ESCOLHIDA PARA SUA EXECUÇÃO
			         	limpa()
			         	escolha(opcao) {
			         		caso 0:
			         			
			         			pare
			         		caso 1: // SACA VALORES DA CONTA CORRENTE
							escreva("Digite o valor do saque: ")
				            	leia(valor) // GUARDA O VALOR QUE FOI SACADO
							limpa()
					            se(valor > saldo_corrente) { // CONDIÇÃO PARA CASO O SALDO SEJA INSUFICIENTE PARA SAQUE
					               escreva("Saldo insuficiente.")
					               u.aguarde(2500)
								limpa()					            	
					            } senao {
					               saldo_corrente = saldo_corrente - valor // CONDIÇÃO PARA SALDO SEJA SUFUCIENTE PARA OPEREÇÃO SAQUE 
					               escreva("Saque realizado com sucesso.")
					               u.aguarde(2500)
								limpa()
					            }
			         			pare
			         		caso 2: // OPÇÃO PARA REALIZAR DEPOSITO
			         			escreva("Digite o valor do deposito: ")
							leia(valor) // GUARDA O VALOR DO DEPOSITO
							saldo_corrente = saldo_corrente + valor // acumalador para valores depositado
							limpa()
							escreva("Deposito realizado com sucesso !\n")
							u.aguarde(2500)
							limpa()
			         			pare
			         		caso 3: // OPÇÃO PARA EXIBIR DADOS CONTA 
							escreva("Agência: ", agencia_conta)
							escreva("\nNúmero da Conta Corrente: ", numero_conta," - ", digito_conta)
							escreva("\nNome do Titular: ", nome_titular)
							escreva("\nSaldo da Conta Corrente: ", saldo_corrente)
							escreva("\n\nPrecione ENTER para voltar para o menu")
							leia(resposta)
							limpa()
			         			pare
		         			caso contrario:
							escreva("Opção invalida !")
							u.aguarde(2500)
							limpa()
			         	}
					pare
				caso 2: // MENU DAS OPERAÇÕES DA CONTA POUPANÇA
					escreva("Escolha uma opção:\n")
					escreva("1 - Aplicar na poupança\n")
					escreva("2 - Resgate\n")
					escreva("3 - Exibir saldo\n")
					escreva("\n\n0 - Voltar para o menu principal\n")
					leia(opcao)
					limpa()
					escolha(opcao) { // OPÇÃO PARA OPEÇÃO D APLICAÇÃO NA POUPANÇA
						caso 0:
							pare
						caso 1: // ESSA OPÇÃO REALIZA PLICAÇÕES NA POUPANÇA CASO O SALDO SEJA SUFICIENTE PARA A OPERAÇÃO
							escreva("Digite o valor a ser aplicado na poupança:")
							leia(valor) // GUARDA O VALOR APLICADO NA POUPANÇA
							se (valor > saldo_corrente) { // CONDIÇÃO PARA INDICAR QUE O SALDO É INSUFICIENTE
								escreva("Saldo insuficiente.")
								u.aguarde(2500)
								limpa()
							} senao { //  ESTRUTORA PARA APLICAÇÃO NA CONTA POUPANÇA
								saldo_corrente = saldo_corrente - valor // CONDIÇÃO QUE RETIRA O VALORES DA CONTA CORRENTE E APLICA NA POUPANÇA 
								saldo_poupanca = saldo_poupanca + valor // CONDIÇÃO QUE RECEBE VALORES DAS APLICAÇÕES RETIRADA DA CONTA CORRENTE
								escreva("Aplicação realizada com sucesso.")
								u.aguarde(2500)
								limpa()
							}
							pare
						caso 2: // ESSA OPÇÃO REALIZA O RESGATE DE VALORES DA POUPANÇA PARA CONTA CORRENTE
							escreva("Digite o valor do resgate:")
							leia(valor) // GUARDA O VALOR RESGATADO
							se(valor > saldo_poupanca) { // CONDIÇÃO PARA INFORMA QUE O SALDO É INSUFICIENTE PARA ESSA OPRAÇÃO
								escreva("Saldo insuficiente.")
								u.aguarde(2500)
								limpa()
							} senao {						
								saldo_poupanca = saldo_poupanca - valor // CONDIÇÃO QUE INDICA QUE O VALOR RESGATADO SERA RETIRADO DA POUPANÇA
								saldo_corrente = saldo_corrente + valor // CONDIÇÃO QUE INDICA QUE O VALOR RESGATADO SERA ATRIBUIDO NA CONTA CORRENTE
								escreva("Resgate realizado com sucesso.")
								u.aguarde(2500)
								limpa()
							}
							pare 
						caso 3: // MENU QUE EXIBE OS DADOS DA CONTA POUPANÇA
							escreva("Agência: ", agencia_conta)
							escreva("\nNúmero da Conta Corrente: ", numero_conta," - ", digito_conta)
							escreva("\nNome do Titular: ", nome_titular)
							escreva("\nSaldo da Conta Poupança: ", saldo_poupanca)
							escreva("\n\nPrecione ENTER para voltar para o menu")
							leia(resposta)
							limpa()
							pare
						caso contrario: // CASO O USUARIO INFOME UMA OPÇÃO INVALIDA
							escreva("Opção invalida !")
							u.aguarde(2500)
							limpa()
						}
						pare
				caso 0: // MENU QUE EXIBE OS DADOS DA CONTA CORRENTE
					escreva("Agência: ", agencia_conta)
					escreva("\nNúmero da Conta Corrente: ", numero_conta," - ", digito_conta)
					escreva("\nNome do Titular: ", nome_titular)
					escreva("\n\nPrecione ENTER para entrar na conta")
					leia(resposta)
					limpa()
					pare
			}
			
		} enquanto(menu == verdadeiro)
		
	}
}
/* $$$ Portugol Studio $$$ 
 * 
 * Esta seção do arquivo guarda informações do Portugol Studio.
 * Você pode apagá-la se estiver utilizando outro editor.
 * 
 * @POSICAO-CURSOR = 153; 
 * @PONTOS-DE-PARADA = ;
 * @SIMBOLOS-INSPECIONADOS = ;
 * @FILTRO-ARVORE-TIPOS-DE-DADO = inteiro, real, logico, cadeia, caracter, vazio;
 * @FILTRO-ARVORE-TIPOS-DE-SIMBOLO = variavel, vetor, matriz, funcao;
 */
